state 0 //

    0 $accept: . start

    IF  shift, and goto state 4

    rule   goto state 3
    rules  goto state 2
    start  goto state 1

state 1 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    0 $accept: start .  [$end]

    $end  accept

state 2 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    1 start: rules .  [$end]
    3 rules: rules . rule SEMICOLON

    $end  reduce using rule 1 (start)
    IF    shift, and goto state 4

    rule  goto state 29

state 3 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    2 rules: rule . SEMICOLON

    SEMICOLON  shift, and goto state 28

state 4 // IF

    4 rule: IF . condition THEN move
    5 rule: IF . condition THEN flag
    6 rule: IF . condition THEN unflag

    IDENTIFIER  shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 5

state 5 // IF IDENTIFIER EQUALS QUOTE [AND]

    4 rule: IF condition . THEN move
    5 rule: IF condition . THEN flag
    6 rule: IF condition . THEN unflag
    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1

    AND   shift, and goto state 14
    OR    shift, and goto state 15
    THEN  shift, and goto state 18

state 6 // IF IDENTIFIER EQUALS QUOTE [AND]

    7 condition: comparison .  [AND, OR, THEN]

    AND   reduce using rule 7 (condition)
    OR    reduce using rule 7 (condition)
    THEN  reduce using rule 7 (condition)

state 7 // IF NOT

   10 condition: NOT . condition  // assoc %right, prec 2

    IDENTIFIER  shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 13

state 8 // IF IDENTIFIER

   11 comparison: IDENTIFIER . TILDE QUOTE
   12 comparison: IDENTIFIER . EQUALS QUOTE

    EQUALS  shift, and goto state 10
    TILDE   shift, and goto state 9

state 9 // IF IDENTIFIER TILDE

   11 comparison: IDENTIFIER TILDE . QUOTE

    QUOTE  shift, and goto state 12

state 10 // IF IDENTIFIER EQUALS

   12 comparison: IDENTIFIER EQUALS . QUOTE

    QUOTE  shift, and goto state 11

state 11 // IF IDENTIFIER EQUALS QUOTE

   12 comparison: IDENTIFIER EQUALS QUOTE .  [AND, OR, THEN]

    AND   reduce using rule 12 (comparison)
    OR    reduce using rule 12 (comparison)
    THEN  reduce using rule 12 (comparison)

state 12 // IF IDENTIFIER TILDE QUOTE

   11 comparison: IDENTIFIER TILDE QUOTE .  [AND, OR, THEN]

    AND   reduce using rule 11 (comparison)
    OR    reduce using rule 11 (comparison)
    THEN  reduce using rule 11 (comparison)

state 13 // IF NOT IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1
   10 condition: NOT condition .  [AND, OR, THEN]  // assoc %right, prec 2

    AND   reduce using rule 10 (condition)
    OR    reduce using rule 10 (condition)
    THEN  reduce using rule 10 (condition)

state 14 // IF IDENTIFIER EQUALS QUOTE AND

    8 condition: condition AND . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 17

state 15 // IF IDENTIFIER EQUALS QUOTE OR

    9 condition: condition OR . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 16

state 16 // IF IDENTIFIER EQUALS QUOTE OR IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1
    9 condition: condition OR condition .  [AND, OR, THEN]  // assoc %left, prec 1

    AND   reduce using rule 9 (condition)
    OR    reduce using rule 9 (condition)
    THEN  reduce using rule 9 (condition)

state 17 // IF IDENTIFIER EQUALS QUOTE AND IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    8 condition: condition AND condition .  [AND, OR, THEN]  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1

    AND   reduce using rule 8 (condition)
    OR    reduce using rule 8 (condition)
    THEN  reduce using rule 8 (condition)

state 18 // IF IDENTIFIER EQUALS QUOTE THEN

    4 rule: IF condition THEN . move
    5 rule: IF condition THEN . flag
    6 rule: IF condition THEN . unflag

    FLAG    shift, and goto state 23
    MOVE    shift, and goto state 22
    UNFLAG  shift, and goto state 24

    flag    goto state 20
    move    goto state 19
    unflag  goto state 21

state 19 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE [SEMICOLON]

    4 rule: IF condition THEN move .  [SEMICOLON]

    SEMICOLON  reduce using rule 4 (rule)

state 20 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    5 rule: IF condition THEN flag .  [SEMICOLON]

    SEMICOLON  reduce using rule 5 (rule)

state 21 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG [SEMICOLON]

    6 rule: IF condition THEN unflag .  [SEMICOLON]

    SEMICOLON  reduce using rule 6 (rule)

state 22 // IF IDENTIFIER EQUALS QUOTE THEN MOVE

   13 move: MOVE . QUOTE

    QUOTE  shift, and goto state 27

state 23 // IF IDENTIFIER EQUALS QUOTE THEN FLAG

   14 flag: FLAG .  [SEMICOLON]
   15 flag: FLAG . QUOTE

    QUOTE      shift, and goto state 26
    SEMICOLON  reduce using rule 14 (flag)

state 24 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG

   16 unflag: UNFLAG .  [SEMICOLON]
   17 unflag: UNFLAG . QUOTE

    QUOTE      shift, and goto state 25
    SEMICOLON  reduce using rule 16 (unflag)

state 25 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG QUOTE

   17 unflag: UNFLAG QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 17 (unflag)

state 26 // IF IDENTIFIER EQUALS QUOTE THEN FLAG QUOTE

   15 flag: FLAG QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 15 (flag)

state 27 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE

   13 move: MOVE QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 13 (move)

state 28 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    2 rules: rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 2 (rules)
    IF    reduce using rule 2 (rules)

state 29 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    3 rules: rules rule . SEMICOLON

    SEMICOLON  shift, and goto state 30

state 30 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    3 rules: rules rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 3 (rules)
    IF    reduce using rule 3 (rules)

