state 0 //

    0 $accept: . start

    IF  shift, and goto state 4

    rule   goto state 3
    rules  goto state 2
    start  goto state 1

state 1 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    0 $accept: start .  [$end]

    $end  accept

state 2 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    1 start: rules .  [$end]
    3 rules: rules . rule SEMICOLON

    $end  reduce using rule 1 (start)
    IF    shift, and goto state 4

    rule  goto state 32

state 3 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    2 rules: rule . SEMICOLON

    SEMICOLON  shift, and goto state 31

state 4 // IF

    4 rule: IF . condition THEN move
    5 rule: IF . condition THEN flag
    6 rule: IF . condition THEN unflag

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 5

state 5 // IF IDENTIFIER EQUALS QUOTE [AND]

    4 rule: IF condition . THEN move
    5 rule: IF condition . THEN flag
    6 rule: IF condition . THEN unflag
    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1

    AND   shift, and goto state 15
    OR    shift, and goto state 16
    THEN  shift, and goto state 21

state 6 // IF IDENTIFIER EQUALS QUOTE [AND]

    7 condition: comparison .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 7 (condition)
    OR      reduce using rule 7 (condition)
    RPAREN  reduce using rule 7 (condition)
    THEN    reduce using rule 7 (condition)

state 7 // IF NOT

   10 condition: NOT . condition  // assoc %right, prec 2

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 20

state 8 // IF LPAREN

   11 condition: LPAREN . condition RPAREN

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 14

state 9 // IF IDENTIFIER

   12 comparison: IDENTIFIER . TILDE QUOTE
   13 comparison: IDENTIFIER . EQUALS QUOTE

    EQUALS  shift, and goto state 11
    TILDE   shift, and goto state 10

state 10 // IF IDENTIFIER TILDE

   12 comparison: IDENTIFIER TILDE . QUOTE

    QUOTE  shift, and goto state 13

state 11 // IF IDENTIFIER EQUALS

   13 comparison: IDENTIFIER EQUALS . QUOTE

    QUOTE  shift, and goto state 12

state 12 // IF IDENTIFIER EQUALS QUOTE

   13 comparison: IDENTIFIER EQUALS QUOTE .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 13 (comparison)
    OR      reduce using rule 13 (comparison)
    RPAREN  reduce using rule 13 (comparison)
    THEN    reduce using rule 13 (comparison)

state 13 // IF IDENTIFIER TILDE QUOTE

   12 comparison: IDENTIFIER TILDE QUOTE .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 12 (comparison)
    OR      reduce using rule 12 (comparison)
    RPAREN  reduce using rule 12 (comparison)
    THEN    reduce using rule 12 (comparison)

state 14 // IF LPAREN IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1
   11 condition: LPAREN condition . RPAREN

    AND     shift, and goto state 15
    OR      shift, and goto state 16
    RPAREN  shift, and goto state 17

state 15 // IF IDENTIFIER EQUALS QUOTE AND

    8 condition: condition AND . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 19

state 16 // IF IDENTIFIER EQUALS QUOTE OR

    9 condition: condition OR . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 18

state 17 // IF LPAREN IDENTIFIER EQUALS QUOTE RPAREN

   11 condition: LPAREN condition RPAREN .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 11 (condition)
    OR      reduce using rule 11 (condition)
    RPAREN  reduce using rule 11 (condition)
    THEN    reduce using rule 11 (condition)

state 18 // IF IDENTIFIER EQUALS QUOTE OR IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1
    9 condition: condition OR condition .  [AND, OR, RPAREN, THEN]  // assoc %left, prec 1

    AND     reduce using rule 9 (condition)
    OR      reduce using rule 9 (condition)
    RPAREN  reduce using rule 9 (condition)
    THEN    reduce using rule 9 (condition)

state 19 // IF IDENTIFIER EQUALS QUOTE AND IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    8 condition: condition AND condition .  [AND, OR, RPAREN, THEN]  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1

    AND     reduce using rule 8 (condition)
    OR      reduce using rule 8 (condition)
    RPAREN  reduce using rule 8 (condition)
    THEN    reduce using rule 8 (condition)

state 20 // IF NOT IDENTIFIER EQUALS QUOTE [AND]

    8 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition . OR condition  // assoc %left, prec 1
   10 condition: NOT condition .  [AND, OR, RPAREN, THEN]  // assoc %right, prec 2

    AND     reduce using rule 10 (condition)
    OR      reduce using rule 10 (condition)
    RPAREN  reduce using rule 10 (condition)
    THEN    reduce using rule 10 (condition)

state 21 // IF IDENTIFIER EQUALS QUOTE THEN

    4 rule: IF condition THEN . move
    5 rule: IF condition THEN . flag
    6 rule: IF condition THEN . unflag

    FLAG    shift, and goto state 26
    MOVE    shift, and goto state 25
    UNFLAG  shift, and goto state 27

    flag    goto state 23
    move    goto state 22
    unflag  goto state 24

state 22 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE [SEMICOLON]

    4 rule: IF condition THEN move .  [SEMICOLON]

    SEMICOLON  reduce using rule 4 (rule)

state 23 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    5 rule: IF condition THEN flag .  [SEMICOLON]

    SEMICOLON  reduce using rule 5 (rule)

state 24 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG [SEMICOLON]

    6 rule: IF condition THEN unflag .  [SEMICOLON]

    SEMICOLON  reduce using rule 6 (rule)

state 25 // IF IDENTIFIER EQUALS QUOTE THEN MOVE

   14 move: MOVE . QUOTE

    QUOTE  shift, and goto state 30

state 26 // IF IDENTIFIER EQUALS QUOTE THEN FLAG

   15 flag: FLAG .  [SEMICOLON]
   16 flag: FLAG . QUOTE

    QUOTE      shift, and goto state 29
    SEMICOLON  reduce using rule 15 (flag)

state 27 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG

   17 unflag: UNFLAG .  [SEMICOLON]
   18 unflag: UNFLAG . QUOTE

    QUOTE      shift, and goto state 28
    SEMICOLON  reduce using rule 17 (unflag)

state 28 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG QUOTE

   18 unflag: UNFLAG QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 18 (unflag)

state 29 // IF IDENTIFIER EQUALS QUOTE THEN FLAG QUOTE

   16 flag: FLAG QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 16 (flag)

state 30 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE

   14 move: MOVE QUOTE .  [SEMICOLON]

    SEMICOLON  reduce using rule 14 (move)

state 31 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    2 rules: rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 2 (rules)
    IF    reduce using rule 2 (rules)

state 32 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    3 rules: rules rule . SEMICOLON

    SEMICOLON  shift, and goto state 33

state 33 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    3 rules: rules rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 3 (rules)
    IF    reduce using rule 3 (rules)

