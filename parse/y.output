state 0 //

    0 $accept: . start

    IF  shift, and goto state 4

    rule   goto state 3
    rules  goto state 2
    start  goto state 1

state 1 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    0 $accept: start .  [$end]

    $end  accept

state 2 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON [$end]

    1 start: rules .  [$end]
    3 rules: rules . rule SEMICOLON

    $end  reduce using rule 1 (start)
    IF    shift, and goto state 4

    rule  goto state 36

state 3 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    2 rules: rule . SEMICOLON

    SEMICOLON  shift, and goto state 35

state 4 // IF

    4 rule: IF . condition THEN move
    5 rule: IF . condition THEN flag
    6 rule: IF . condition THEN unflag
    7 rule: IF . condition THEN stream

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 5

state 5 // IF IDENTIFIER EQUALS QUOTE [AND]

    4 rule: IF condition . THEN move
    5 rule: IF condition . THEN flag
    6 rule: IF condition . THEN unflag
    7 rule: IF condition . THEN stream
    9 condition: condition . AND condition  // assoc %left, prec 1
   10 condition: condition . OR condition  // assoc %left, prec 1

    AND   shift, and goto state 16
    OR    shift, and goto state 17
    THEN  shift, and goto state 22

state 6 // IF IDENTIFIER EQUALS QUOTE [AND]

    8 condition: comparison .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 8 (condition)
    OR      reduce using rule 8 (condition)
    RPAREN  reduce using rule 8 (condition)
    THEN    reduce using rule 8 (condition)

state 7 // IF NOT

   11 condition: NOT . condition  // assoc %right, prec 2

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 21

state 8 // IF LPAREN

   12 condition: LPAREN . condition RPAREN

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 15

state 9 // IF IDENTIFIER

   13 comparison: IDENTIFIER . TILDE string
   14 comparison: IDENTIFIER . EQUALS string

    EQUALS  shift, and goto state 11
    TILDE   shift, and goto state 10

state 10 // IF IDENTIFIER TILDE

   13 comparison: IDENTIFIER TILDE . string

    QUOTE  shift, and goto state 13

    string  goto state 14

state 11 // IF IDENTIFIER EQUALS

   14 comparison: IDENTIFIER EQUALS . string

    QUOTE  shift, and goto state 13

    string  goto state 12

state 12 // IF IDENTIFIER EQUALS QUOTE [AND]

   14 comparison: IDENTIFIER EQUALS string .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 14 (comparison)
    OR      reduce using rule 14 (comparison)
    RPAREN  reduce using rule 14 (comparison)
    THEN    reduce using rule 14 (comparison)

state 13 // IF IDENTIFIER TILDE QUOTE

   25 string: QUOTE .  [AND, OR, RPAREN, SEMICOLON, THEN]

    AND        reduce using rule 25 (string)
    OR         reduce using rule 25 (string)
    RPAREN     reduce using rule 25 (string)
    SEMICOLON  reduce using rule 25 (string)
    THEN       reduce using rule 25 (string)

state 14 // IF IDENTIFIER TILDE QUOTE [AND]

   13 comparison: IDENTIFIER TILDE string .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 13 (comparison)
    OR      reduce using rule 13 (comparison)
    RPAREN  reduce using rule 13 (comparison)
    THEN    reduce using rule 13 (comparison)

state 15 // IF LPAREN IDENTIFIER EQUALS QUOTE [AND]

    9 condition: condition . AND condition  // assoc %left, prec 1
   10 condition: condition . OR condition  // assoc %left, prec 1
   12 condition: LPAREN condition . RPAREN

    AND     shift, and goto state 16
    OR      shift, and goto state 17
    RPAREN  shift, and goto state 18

state 16 // IF IDENTIFIER EQUALS QUOTE AND

    9 condition: condition AND . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 20

state 17 // IF IDENTIFIER EQUALS QUOTE OR

   10 condition: condition OR . condition  // assoc %left, prec 1

    IDENTIFIER  shift, and goto state 9
    LPAREN      shift, and goto state 8
    NOT         shift, and goto state 7

    comparison  goto state 6
    condition   goto state 19

state 18 // IF LPAREN IDENTIFIER EQUALS QUOTE RPAREN

   12 condition: LPAREN condition RPAREN .  [AND, OR, RPAREN, THEN]

    AND     reduce using rule 12 (condition)
    OR      reduce using rule 12 (condition)
    RPAREN  reduce using rule 12 (condition)
    THEN    reduce using rule 12 (condition)

state 19 // IF IDENTIFIER EQUALS QUOTE OR IDENTIFIER EQUALS QUOTE [AND]

    9 condition: condition . AND condition  // assoc %left, prec 1
   10 condition: condition . OR condition  // assoc %left, prec 1
   10 condition: condition OR condition .  [AND, OR, RPAREN, THEN]  // assoc %left, prec 1

    AND     reduce using rule 10 (condition)
    OR      reduce using rule 10 (condition)
    RPAREN  reduce using rule 10 (condition)
    THEN    reduce using rule 10 (condition)

state 20 // IF IDENTIFIER EQUALS QUOTE AND IDENTIFIER EQUALS QUOTE [AND]

    9 condition: condition . AND condition  // assoc %left, prec 1
    9 condition: condition AND condition .  [AND, OR, RPAREN, THEN]  // assoc %left, prec 1
   10 condition: condition . OR condition  // assoc %left, prec 1

    AND     reduce using rule 9 (condition)
    OR      reduce using rule 9 (condition)
    RPAREN  reduce using rule 9 (condition)
    THEN    reduce using rule 9 (condition)

state 21 // IF NOT IDENTIFIER EQUALS QUOTE [AND]

    9 condition: condition . AND condition  // assoc %left, prec 1
   10 condition: condition . OR condition  // assoc %left, prec 1
   11 condition: NOT condition .  [AND, OR, RPAREN, THEN]  // assoc %right, prec 2

    AND     reduce using rule 11 (condition)
    OR      reduce using rule 11 (condition)
    RPAREN  reduce using rule 11 (condition)
    THEN    reduce using rule 11 (condition)

state 22 // IF IDENTIFIER EQUALS QUOTE THEN

    4 rule: IF condition THEN . move
    5 rule: IF condition THEN . flag
    6 rule: IF condition THEN . unflag
    7 rule: IF condition THEN . stream

    FLAG    shift, and goto state 28
    MOVE    shift, and goto state 27
    STREAM  shift, and goto state 30
    UNFLAG  shift, and goto state 29

    flag    goto state 24
    move    goto state 23
    stream  goto state 26
    unflag  goto state 25

state 23 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE [SEMICOLON]

    4 rule: IF condition THEN move .  [SEMICOLON]

    SEMICOLON  reduce using rule 4 (rule)

state 24 // IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    5 rule: IF condition THEN flag .  [SEMICOLON]

    SEMICOLON  reduce using rule 5 (rule)

state 25 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG [SEMICOLON]

    6 rule: IF condition THEN unflag .  [SEMICOLON]

    SEMICOLON  reduce using rule 6 (rule)

state 26 // IF IDENTIFIER EQUALS QUOTE THEN STREAM QUOTE [SEMICOLON]

    7 rule: IF condition THEN stream .  [SEMICOLON]

    SEMICOLON  reduce using rule 7 (rule)

state 27 // IF IDENTIFIER EQUALS QUOTE THEN MOVE

   15 move: MOVE . string

    QUOTE  shift, and goto state 13

    string  goto state 34

state 28 // IF IDENTIFIER EQUALS QUOTE THEN FLAG

   16 flag: FLAG .  [SEMICOLON]
   17 flag: FLAG . string

    QUOTE      shift, and goto state 13
    SEMICOLON  reduce using rule 16 (flag)

    string  goto state 33

state 29 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG

   18 unflag: UNFLAG .  [SEMICOLON]
   19 unflag: UNFLAG . string

    QUOTE      shift, and goto state 13
    SEMICOLON  reduce using rule 18 (unflag)

    string  goto state 32

state 30 // IF IDENTIFIER EQUALS QUOTE THEN STREAM

   20 stream: STREAM . string

    QUOTE  shift, and goto state 13

    string  goto state 31

state 31 // IF IDENTIFIER EQUALS QUOTE THEN STREAM QUOTE [SEMICOLON]

   20 stream: STREAM string .  [SEMICOLON]

    SEMICOLON  reduce using rule 20 (stream)

state 32 // IF IDENTIFIER EQUALS QUOTE THEN UNFLAG QUOTE [SEMICOLON]

   19 unflag: UNFLAG string .  [SEMICOLON]

    SEMICOLON  reduce using rule 19 (unflag)

state 33 // IF IDENTIFIER EQUALS QUOTE THEN FLAG QUOTE [SEMICOLON]

   17 flag: FLAG string .  [SEMICOLON]

    SEMICOLON  reduce using rule 17 (flag)

state 34 // IF IDENTIFIER EQUALS QUOTE THEN MOVE QUOTE [SEMICOLON]

   15 move: MOVE string .  [SEMICOLON]

    SEMICOLON  reduce using rule 15 (move)

state 35 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    2 rules: rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 2 (rules)
    IF    reduce using rule 2 (rules)

state 36 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG [SEMICOLON]

    3 rules: rules rule . SEMICOLON

    SEMICOLON  shift, and goto state 37

state 37 // IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON IF IDENTIFIER EQUALS QUOTE THEN FLAG SEMICOLON

    3 rules: rules rule SEMICOLON .  [$end, IF]

    $end  reduce using rule 3 (rules)
    IF    reduce using rule 3 (rules)

